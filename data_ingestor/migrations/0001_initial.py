# Generated by Django 3.1.5 on 2021-01-27 20:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('public_profile', models.BooleanField(default=0)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('ticker', models.CharField(max_length=60)),
                ('sector', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=60)),
                ('last_price', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
            ],
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('fiscal_country', django_countries.fields.CountryField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Crypto',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data_ingestor.asset')),
            ],
            bases=('data_ingestor.asset',),
        ),
        migrations.CreateModel(
            name='ETF',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data_ingestor.asset')),
                ('isin', models.CharField(max_length=60)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('region', models.CharField(max_length=60)),
            ],
            bases=('data_ingestor.asset',),
        ),
        migrations.CreateModel(
            name='Fund',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data_ingestor.asset')),
                ('isin', models.CharField(max_length=60)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('region', models.CharField(max_length=60)),
            ],
            bases=('data_ingestor.asset',),
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('asset_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='data_ingestor.asset')),
                ('isin', models.CharField(max_length=60)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('region', models.CharField(max_length=60)),
            ],
            bases=('data_ingestor.asset',),
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('break_even_price', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('closing_price', models.DecimalField(decimal_places=8, default=0, max_digits=18)),
                ('opening_date', models.DateTimeField(default=None)),
                ('closing_date', models.DateTimeField(default=None)),
                ('order_status', models.CharField(choices=[('O', 'Open'), ('C', 'Closed'), ('P', 'Pending'), ('X', 'Canceled')], max_length=1)),
                ('asset', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='position_asset', to='data_ingestor.asset')),
                ('broker', models.OneToOneField(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='position_broker', to='data_ingestor.asset')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='position_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
